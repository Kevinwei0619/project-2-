 <form class="needs-validation" novalidate>
    <div class="form-row">
        <div class="col-md-3 mb-3">
            <label for="validationCustom01">First name</label>
            <input type="text" class="form-control" id="firstName" placeholder="First name" required>
            <div class="valid-feedback">
                Looks good!
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <label for="validationCustom02">Last name</label>
            <input type="text" class="form-control" id="lastName" placeholder="Last name" required>
            <div class="valid-feedback">
                Looks good!
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <label for="email">Email address</label>
            <div class="input-group">
                <div class="input-group-prepend">
                </div>
                <input type="email" class="form-control" id="email" placeholder="name@example.com" required>
                <div class="invalid-feedback">
                    Please enter an E-mail Address.
                </div>
            </div>
        </div>

        <div class="dropdown col-md-3 mb-3">
            <label for="vendorType">vendorType</label>
            <select class="form-control" id="vendorType">
                <option value="null">Select a Vendor Type</option>
                <option value="photographers">Photographers</option>
                <option value="cakes">Cakes</option>
                <option value="dresses">Dresses</option>
                <option value="catering">Catering</option>
                <option value="venues">Venues</option>
            </select>

            {{!--
            <div class="valid-feedback">
                Looks good!
            </div> --}}

        </div>



    </div>
    <div class="form-row">
        <div class="col-md-6 mb-3">
            <label for="city">City</label>
            <input type="text" class="form-control" id="city" placeholder="City" required>
            <div class="invalid-feedback">
                Please provide a valid city.
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <label for="state">State</label>
            <input type="text" class="form-control" id="state" placeholder="State" required>
            <div class="invalid-feedback">
                Please provide a valid state.
            </div>
        </div>
        <div class="col-md-3 mb-3">
            <label for="zip">Zip</label>
            <input type="text" class="form-control" id="zip" placeholder="Zip" required>
            <div class="invalid-feedback">
                Please provide a valid zip.
            </div>
        </div>
    </div>

    <div class="form-row">
        <div class="col-md-12 mb-6">
            <label for="description">description</label>
            <input type="text" class="form-control" id="description" placeholder="description" required>
            <div class="invalid-feedback">
                Please provide description.
            </div>
        </div>
    </div>
    <div class="form-row">
        <div class="col-md-6 mb-3">
            <label for="password">password</label>
            <input type="password" class="form-control" id="password" placeholder="password" required>
            <div class="invalid-feedback">
                Please provide password
            </div>
        </div>
    </div>
    <div class="form-group">
        <div class="form-check">
            <input class="form-check-input" type="checkbox" value="" id="invalidCheck" required>
            <label class="form-check-label" for="invalidCheck">
                Agree to terms and conditions
            </label>
            <div class="invalid-feedback">
                You must agree before submitting.
            </div>
        </div>
    </div>
    <button class="btn btn-primary" type="submit" id="submitRegister">Submit</button>
    {{!-- <button class="btn btn-primary" type="button"><a href="/">Go Home</a></button> --}}
</form>
{{!-- add scripts unique to this page --}}
{{#*inline "scripts-block"}}
   <script src="/public/assets/js/register.js"></script>
{{/inline}}
<script>
    
// Example starter JavaScript for disabling form submissions if there are invalid fields
(function () {
    'use strict';
    window.addEventListener('load', function () {
        // Fetch all the forms we want to apply custom Bootstrap validation styles to
        var forms = document.getElementsByClassName('needs-validation');
        // Loop over them and prevent submission
        var validation = Array.prototype.filter.call(forms, function (form) {
            form.addEventListener('submit', function (event) {
                if (form.checkValidity() === false) {
                    event.preventDefault();
                    event.stopPropagation();
                }
                form.classList.add('was-validated');
            }, false);
        });
    }, false);

})();

$(document).ready(function () {

    $("#submitRegister").on("click", handleNewVendorSubmit)

    function handleNewVendorSubmit(event) {
        event.preventDefault();
        var firstName = $("#firstName").val().trim();
        var lastName = $("#lastName").val().trim();
        var vendorType = $("#vendorType").val();
        var description = $("#description").val();
        var email = $("#email").val().trim();
        var state = $("#state").val().trim();
        var city = $("#city").val().trim();
        var zip = $("#zip").val().trim();
        var password = $("#password").val().trim();
        var fullName = firstName + lastName;

        console.log("second one :" + firstName, lastName, fullName, vendorType, description, email, state, city, zip, password);

        if (!firstName || !lastName || !vendorType || !email || !city || !state || !zip || !password)
            return;

        insertVendor({
            firstName: firstName,
            lastName: lastName,
            fullName: fullName,
            vendorType: vendorType,
            description: description,
            email: email,
            State: state,
            password: password,
            City: city,
            zip: zip,
        })
    };





    function insertVendor(VendorData) {
        $.post("/api/newVendor", VendorData).then(function (result) {
            console.log("what is this: ", result.success);
            if (result.success) {

                console.log(result.id);
                console.log("good");
                var fullName = result.fullName;
                //getVendorInfor(fullName);
                window.location.replace("/vendors/" + fullName);
            } else {
                console.log("bad");
            }
        });
    };


    function getVendorInfor(fullName) {
        $.get('/api/vendors').then(function (data) {
        });

    }
});

</script>